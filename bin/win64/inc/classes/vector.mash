/*
 *  Class-vector like a vector in C/C++
 */

class Vector:
  protected:
    var Items,
        Size

  public:
    init():
      $Items ?= new[0]
      $Size ?= 0
    end

    proc Push_Back(Object):
      SetLen($Items, $Size + 1)
      $Items[$Size] ?= Object
      $Size++
    end

    proc Push_First(Object):
      if $Size > 0:
        SetLen($Items, $Size + 1)
        for i back 0..($Size - 1):  $Items[i + 1] ?= $Items[i]  end
        $Size++
        $Items[0] ?= Object
      else:
        $Push_Back(Object)
      end
    end

    func Pop_Back():
      r ?= $Items[$Size - 1]
      SetLen($Items, $Size - 1)
      $Size--
      return r
    end

    func Pop_First():
      r ?= $Items[0]
      $Rem_First()
      return r
    end

    func Peek_Back():
      return $Items[$Size - 1]
    end

    func Peek_First():
      return $Items[0]
    end

    proc Rem_First():
      i ?= 1
      while i < $Size - 1:
        $Items[i] ?= $Items[i + 1]
        i++
      end

      SetLen($Items, $Size - 1)
      $Size--
    end

    proc Rem_Back():
      $Size--
      SetLen($Items, $Size)
    end

    func Get(Index):  return $Items[Index]  end
    func Size():  return copy($Size)  end
end
