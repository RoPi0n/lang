////////////////////////////////////////////////////////////////////////////////
// Base types
////////////////////////////////////////////////////////////////////////////////

uses <bf>
uses <strings>
uses <classes\streams>

class StringList(List):
  public:
    proc SetText,
         SaveToFile,
         LoadFromFile

    func ToString
end

proc StringList::SetText(text):
  $Clear()
  p ?= s_Pos(LnBreak, text)
  while p > 0:
    $Add(s_Copy(text, 1, p - 1))
    s_Del(text, 1, p + len(LnBreak) - 1)
    p ?= s_Pos(LnBreak, text)
  end
  if Len(text) > 0:
    $Add(text)
  end
end

func StringList::ToString():
  r ?= ""
  for(i ?= 0; i < $size; i++):
    r += $Items[i]
    if i + 1 < $size:
      r += LnBreak
    end
  end
  return r
end

proc StringList::SaveToFile(fpath):
  st ?= new FileStream(fpath, fmCreate)
  st -> WriteStr($GetText())
  st -> Free()
end

proc StringList::LoadFromFile(fpath):
  st ?= new FileStream(fpath, fmOpenRead)
  s ?= ""
  sz ?= st -> GetSize()
  st -> ReadStr(s, sz)
  st -> Free()

  $Clear()
  p ?= s_Pos(LnBreak, s)
  while p > 0:
    $Add(s_Copy(s, 0, p))
    s_Del(s, 0, p + len(LnBreak))
    p ?= s_Pos(LnBreak, s)
  end
  if Len(s) > 0:
    $Add(s)
  end
end
