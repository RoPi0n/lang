////////////////////////////////////////////////////////////////////////////////
// Base types
////////////////////////////////////////////////////////////////////////////////

uses <strings>
uses <classes\list>
uses <classes\streams>

class StringList(List):
  public:
    proc SetText,

         SaveToFile,
         LoadFromFile,

         SaveToStream,
         LoadFromStream

    func ToString
end

proc StringList::SetText(text):
  $Clear()
  p ?= s_Pos(LnBreak, text)
  while p > 0:
    $Add(s_Copy(text, 1, p - 1))
    s_Del(text, 1, p + len(LnBreak) - 1)
    p ?= s_Pos(LnBreak, text)
  end
  if Len(text) > 0:
    $Add(text)
  end
end

func StringList::ToString():
  r ?= ""
  for(i ?= 0; i < $size; i++):
    r += $Items[i]
    if i + 1 < $size:
      r += LnBreak
    end
  end
  return r
end

proc StringList::SaveToStream(st):
  st -> WriteStr($ToString())
end

proc StringList::SaveToFile(fpath):
  st ?= new FileStream(fpath, fmCreate)
  st -> WriteStr($ToString())
end

proc StringList::LoadFromStream(st):
  sz ?= st -> GetSize()
  s ?= st -> ReadStr(sz)

  $Clear()
  p ?= s_Pos(LnBreak, s)
  while p > 0:
    $Add(s_Copy(s, 0, p))
    s_Del(s, 0, p + len(LnBreak))
    p ?= s_Pos(LnBreak, s)
  end
  if Len(s) > 0:
    $Add(s)
  end
end

proc StringList::LoadFromFile(fpath):
  st ?= new FileStream(fpath, fmOpenRead)
  $LoadFromStream(st)
end
