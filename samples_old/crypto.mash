uses <crt>
uses <math>
uses <classes>

func LHash_f2x(f):
  f ?= abs(f)
  r ?= "" + trunc(f) + trunc(frac(f) * 1000000000)
  while r[len(r) - 1] == "0":
    s_Del(r, len(r) - 1, 1)
  end
  return r
end

func LHash(data):
  h ?= new list()
  for i in 1..8:
    h -> add(Sin((i + m_pi / 6) * m_e))
  end

  i ?= 0
  l ?= len(data)

  if typeof(data) == typeStr:
    for (p ?= 0; p < l; p++):
      h -> Items[i] = h -> Items[i] * Cos(Ord(data[p]) * m_e + p) / (i * p + m_pi)
      for d in h -> Items:
        d /= h -> Items[i]
      end
      i = if(i == 7, 0, i + 1)
    end
  else:
    for (p ?= 0; p < l; p++):
      h -> Items[i] = h -> Items[i] * Cos(data[p] * m_e + p) / (i * p + m_pi)
      for d in h -> Items:
        d /= h -> Items[i]
      end
      i = if(i == 7, 0, i + 1)
    end
  end

  r ?= ""
  for d in h -> Items:
    r += LHash_f2x(d)
  end

  h -> Free()

  return r
end

proc main():
  while true:
    LHash("Hell!")
    LHash("Hello")
    gc()
  end
  inputln()
end
