/*
 *  Map<key, value> implementation. Nothing interesting.
 */

uses classes.list

class Map:
  protected:
    var Objects,
        Keys

  public:
    init():
      $Objects ?= new list()
      $Keys ?= new list()
    end

    proc Add(Obj, Key):
      $Objects -> Insert(Obj, $Keys -> NextIns(Key))
    end

    proc Delete(Key):
      Indx ?= $Keys -> Find(Key)
      $Keys -> Delete(Indx)
      $Objects -> Delete(Indx)
    end

    proc DeleteAt(Index):
      $Keys -> Delete(Index)
      $Objects -> Delete(Index)
    end

    proc Clear():
      $Keys -> Clear()
      $Objects -> Clear()
    end

    func Get(Key):
      return $Objects -> Items[$Keys -> Find(Key)]
    end

    proc Set(Key, Object):  $Objects -> Items[$Keys -> Find(Key)] ?= Object  end

    func At(Index):  return $Objects -> Items[Index]  end

    func KeyAt(Index):  return $Keys -> Items[Index]  end

    func IndexOf(Obj):  return $Objects -> IndexOf(Obj)  end

    func KeyIndexOf(Key):  return $Keys -> Find(Key)  end

    func Size():  return copy($Keys -> Size)  end
end
