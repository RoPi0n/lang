/*
 *  This file are important library of mash language.
 *  Don't modify this if you don't know what's you doing.
 */

enum EAbstractException [
  ERaisedException  = "ERaisedException",
  EInvalidVMOp      = "EInvalidSVMOperation",
  EInvalidTypeCast  = "EInvalidSVMTypeCast",
  EAbstractError    = "EAbstractError",
  EUnknownException = "EUnknownException"
]

enum EMathException [
  EIntError    = "EInterror",
  EDivByZero   = "EDivByZero",
  ERangeError  = "ERangeError",
  EIntOverflow = "EIntOverflow",

  EMathError   = "EMathError",
  EInvalidOp   = "EInvalidOp",
  EZeroDivide  = "EZeroDivide",
  EOverflow    = "EOverflow",
  EUnderflow   = "EUnderflow"
]

enum ECriticalException [
  EAccessViolation = "EAccessViolation",
  EOSError         = "EOSError",
  ENoThreadSupport = "ENoThreadSupport"
]

// Exception catching / raising class

class Exception:
  public:
    var ClassName,
        Message

    init(Message):
      $ClassName ?= ERaisedException
      $Message ?= Message
    end

    func ToString():
      return "Exception <" + $ClassName + ">, message: '" + $Message + "'."
    end
end

func system_makeexception(ClassName, Message):
  if ClassName == ERaisedException:
    return Message
  else:
    E ?= new Exception
    E -> ClassName ?= ClassName
    E -> Message ?= Message
    return E
  end
end

EUnknown ?= system_makeexception(EUnknownException, "Unknown raised exception")
