/*
 *  This file are important library of mash language.
 *  Don't modify this if you don't know what's you doing.
 */

const ERaisedException  "ERaisedException"
const EInvalidVMOp      "EInvalidSVMOperation"
const EInvalidTypeCast  "EInvalidSVMTypeCast"
const EAbstractError    "EAbstractError"
const EUnknownException "EUnknownException"

const EIntError         "EInterror"
const EDivByZero        "EDivByZero"
const ERangeError       "ERangeError"
const EIntOverflow      "EIntOverflow"

const EMathError        "EMathError"
const EInvalidOp        "EInvalidOp"
const EZeroDivide       "EZeroDivide"
const EOverflow         "EOverflow"
const EUnderflow        "EUnderflow"

const EAccessViolation "EAccessViolation"
const EOSError         "EOSError"
const ENoThreadSupport "ENoThreadSupport"

// Exception categories

EAbstractException ?= [
  ERaisedException,
  EInvalidVMOp,
  EInvalidTypeCast,
  EAbstractError,
  EUnknownException
]

EMathException ?= [
  EIntError,
  EDivByZero,
  ERangeError,
  EIntOverflow,

  EMathError,
  EInvalidOp,
  EZeroDivide,
  EOverflow,
  EUnderflow
]

ECriticalException ?= [
  EAccessViolation,
  EOSError,
  ENoThreadSupport
]

// Exception catching / raising class

class Exception:
  public:
    var ClassName,
        Message

    init(Message):
      $ClassName ?= ERaisedException
      $Message ?= Message
    end
end

func system_makeexception(classname, message):
  if classname == ERaisedException:
    return message
  else:
    E ?= new Exception
    E -> ClassName ?= classname
    E -> Message ?= message
    return E
  end
end

EUnknown ?=
  system_makeexception(EUnknownException, "Unknown raised exception.")
